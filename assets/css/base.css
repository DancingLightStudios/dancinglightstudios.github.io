@layer variables, reset, generic, element, component, page, utility;

@layer variables {
  body {
    {%- for color in site.data.colors.colors %}
    {%- if color.variations %}
      {%- assign variations = color.variations %}
    {%- else %}
      {%- assign variations = null | compact %}
    {%- endif %}

    {%- assign colors = color | concat: variations  %}
    {%- for color in colors %}
    --c-{{color.name | downcase }}: {{color.value}};
    {%- endfor %}
    {%- endfor %}

    /* Scaling Perfect fifth (1.500) */
    {%- for fontsize in site.data.fonts.fonts.sizes %}
    --fs-{{ fontsize.name | downcase }}: {{ fontsize.value }};
    --lh-{{ fontsize.name | downcase }}: {{ fontsize.leading }};
    --ls-{{ fontsize.name | downcase }}: {{ fontsize.kerning }};
    {%- endfor %}
  }
}

@layer reset {
  /*! modern-normalize v2.0.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

  /*
  Document
  ========
  */

  /**
  Apply a more natural box layout model to all elements (opinionated), but allowing components to change,
  compare https://www.paulirish.com/2012/box-sizing-border-box-ftw/
  and https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
  */

  html {
    box-sizing: border-box;
  }

  *::before,
  *::after {
    box-sizing: inherit;
  }

  html {
    /* Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3) */
    font-family:
      Montserrat,
      system-ui,
      'Segoe UI',
      Roboto,
      Helvetica,
      Arial,
      sans-serif,
      'Apple Color Emoji',
      'Segoe UI Emoji';
    line-height: 1.15; /* 1. Correct the line height in all browsers. */
    -webkit-text-size-adjust: 100%; /* 2. Prevent adjustments of font size after orientation changes in iOS. */
    -moz-tab-size: 4; /* 3. Use a more readable tab size (opinionated). */
    tab-size: 4; /* 3 */
  }

  /*
  Sections
  ========
  */

  body {
    margin: 0; /* Remove the margin in all browsers. */
  }

  /*
  Grouping content
  ================
  */

  /**
  1. Add the correct height in Firefox.
  2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
  */

  hr {
    height: 0; /* 1 */
    color: inherit; /* 2 */
  }

  /*
  Text-level semantics
  ====================
  */

  /**
  Add the correct text decoration in Chrome, Edge, and Safari.
  */

  abbr[title] {
    text-decoration: underline dotted;
  }

  /**
  Add the correct font weight in Edge and Safari.
  */

  b,
  strong {
    font-weight: bolder;
  }

  /**
  1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
  2. Correct the odd 'em' font sizing in all browsers.
  */

  code,
  kbd,
  samp,
  pre {
    font-family:
      ui-monospace,
      SFMono-Regular,
      Consolas,
      'Liberation Mono',
      Menlo,
      monospace; /* 1 */
    font-size: 1em; /* 2 */
  }

  /**
  Add the correct font size in all browsers.
  */

  small {
    font-size: 80%;
  }

  /**
  Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
  */

  sub,
  sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }

  sub {
    bottom: -0.25em;
  }

  sup {
    top: -0.5em;
  }

  /*
  Tabular data
  ============
  */

  /**
  1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
  2. Correct table border color inheritance in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
  */

  table {
    text-indent: 0; /* 1 */
    border-color: inherit; /* 2 */
  }

  /*
  Forms
  =====
  */

  /**
  1. Change the font styles in all browsers.
  2. Remove the margin in Firefox and Safari.
  */

  button,
  input,
  optgroup,
  select,
  textarea {
    font-family: inherit; /* 1 */
    font-size: 100%; /* 1 */
    line-height: 1.15; /* 1 */
    margin: 0; /* 2 */
  }

  /**
  Remove the inheritance of text transform in Edge and Firefox.
  */

  button,
  select {
    text-transform: none;
  }

  /**
  Correct the inability to style clickable types in iOS and Safari.
  */

  button,
  [type='button'],
  [type='reset'],
  [type='submit'] {
    -webkit-appearance: button;
  }

  /**
  Remove the inner border and padding in Firefox.
  */

  ::-moz-focus-inner {
    border-style: none;
    padding: 0;
  }

  /**
  Restore the focus styles unset by the previous rule.
  */

  :-moz-focusring {
    outline: 1px dotted ButtonText;
  }

  /**
  Remove the additional ':invalid' styles in Firefox.
  See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
  */

  :-moz-ui-invalid {
    box-shadow: none;
  }

  /**
  Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
  */

  legend {
    padding: 0;
  }

  /**
  Add the correct vertical alignment in Chrome and Firefox.
  */

  progress {
    vertical-align: baseline;
  }

  /**
  Correct the cursor style of increment and decrement buttons in Safari.
  */

  ::-webkit-inner-spin-button,
  ::-webkit-outer-spin-button {
    height: auto;
  }

  /**
  1. Correct the odd appearance in Chrome and Safari.
  2. Correct the outline style in Safari.
  */

  [type='search'] {
    -webkit-appearance: textfield; /* 1 */
    outline-offset: -2px; /* 2 */
  }

  /**
  Remove the inner padding in Chrome and Safari on macOS.
  */

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  /**
  1. Correct the inability to style clickable types in iOS and Safari.
  2. Change font properties to 'inherit' in Safari.
  */

  ::-webkit-file-upload-button {
    -webkit-appearance: button; /* 1 */
    font: inherit; /* 2 */
  }

  /*
  Interactive
  ===========
  */

  /*
  Add the correct display in Chrome and Safari.
  */

  summary {
    display: list-item;
  }

  /*
   * Reset image widths
   */
  img {
    min-width: 0;
    max-width: 100%;
  }
}

@layer utility {
  .sr-only {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    padding: 0 !important;
    overflow: hidden !important;
    clip: rect(0 0 0 0) !important;
    clip-path: inset(50%) !important;
    border: 0 !important;
    white-space: nowrap !important;
  }
}

@layer element {
  /*
   * Container
   */
  .container--vertical {
    max-width: var(--_max-x, 80rem);
    margin-inline: auto;
    padding: 3rem 1rem;
  }

  /*
   * Polygon
   */

  .polygon {
    --_polygon-inset: 4rem;
    --_polygon-x: 30%;
  }

  .polygon-start,
  .polygon-end {
    background-color: var(--_background-color, silver);
    background: linear-gradient(to top right, var(--_background-color, silver), var(--_background-color--dark, var(--_background-color, silver)));
    padding: var(--_polygon-inset) 0;
  }

  .polygon-start {
    /* invert polygon-inset and add 1px of overlap to hide aliasing */
    margin-top: calc(var(--_polygon-inset) * -1 - 1px);
    clip-path: polygon(0% 0%, var(--_polygon-x) var(--_polygon-inset), 100% 0%, 100% 100%, 0% 100%);
  }

  .polygon-end {
    clip-path: polygon(0% 0%, 100% 0%, 100% calc(100% - var(--_polygon-inset)), var(--_polygon-x) 100%, 0% calc(100% - var(--_polygon-inset)));
  }

  .polygon-end.polygon-start {
    clip-path: polygon(0% 0%, var(--_polygon-x) var(--_polygon-inset), 100% 0%, 100% calc(100% - var(--_polygon-inset)), var(--_polygon-x) 100%, 0% calc(100% - var(--_polygon-inset)));
  }

  /*
   * Page Header
   */
  .header {
    padding-block: var(--_header-padding-block-start, 7rem) var(--_header-padding-block-end, 2rem);
  }

  .header__heading {
    /* font-size: var(--_fs-heading, var(--fs-large)); */
    /* line-height: var(--_lh-heading, var(--lh-large)); */
    /* color: var(--_color-heading, black); */
    /* margin-block-end: var(--_gap, 0.75rem); */
  }

  .header__subheading {
    /* font-size: var(--_fs-subheading, var(--fs-base)); */
    /* line-height: var(--_lh-subheading, var(--lh-base)); */
    /* color: var(--_color-subheading, black); */
    /* margin-block-end: 0; */
  }

  @media screen and (min-width: 768px) {
    .header {
      --_header-padding-block-start: 10rem;
      --_header-padding-block-end: 4rem;
    }
  }

  @media screen and (min-width: 1024px) {
    .header {
      /* padding-block: 10rem; */
    }
  }

  @media screen and (min-width: 1366px) {
    .header {
      /* padding-block: 8rem; */
    }
  }

  /*
   * Masonry Stack
   */
  .masonry-stack {
    display: flex;
    flex-flow: column wrap;
    gap: 1rem;
  }

  .masonry-stack::before,
  .masonry-stack::after {
    content: "";
    flex-basis: 100%;
    width: 0;
    order: 2;
  }

  @media screen and (min-width: 668px) {
    .masonry-stack p {
      max-width: calc(100% / 2);
      margin-block-end: 1rem;
    }

    .masonry-stack img {
      max-width: calc(100% / 3);
      flex-shrink: 1;
    }
  }

  @media screen and (min-width: 1024px) {
    .masonry-stack img {
      margin-bottom: 2rem;
    }
  }

  @supports (grid-template-rows: masonry) {
    .masonry-stack {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: masonry;
      height: inherit;
    }

    .masonry-stack p,
    .masonry-stack img {
      width: inherit;
    }

    .masonry-stack img{
      grid-column: 2;
    }

    .masonry-stack p {
      grid-column: 1;
    }
  }
}

@layer generic {
  p:has(+ p) {
    margin-block-end: 0.75rem;
  }
}

/*
 * Forms
 * -----
 */
@layer element {
  fieldset {
    border: none;
    padding: 0;
  }

  input,
  textarea,
  select {
    -webkit-appearance: none;
    border-radius: var(--_input-border-radius, 1rem);
    border-style: var(--_input-border-style, solid);
    border-width: var(--_input-border-width, 2px);
    border-color: var(--_input-border-color, var(--c-grey-20, #bbb));
    padding: var(--_input-padding-block, 0.25rem) var(--_input-padding-inline, 0.75rem);
  }

  input:focus,
  textarea:focus,
  select:focus {
    outline: var(--_input-border-width, 2px) var(--_input-border-style, solid) var(--_input-focus-color, var(--c-accent, blue));
  }

  input[type=checkbox],
  input[type=radio] {
    padding: 0.125rem;
    width: 1rem;
    height: 1rem;
  }

  label:has(input[type=checkbox]),
  label:has(input[type=radio]){
    display: inline-flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--_input-spacing, 0.25rem);
  }

  *:has(> input[type=search] + button) {
    display: inline-flex;
    gap: var(--_input-spacing, 0.25rem);
  }
}

/*
 * Typography
 * ----------
 */
@layer element {
  /*
   * Lists
   * -----
   */
  ul,
  ol {
    padding-inline: var(--_list-padding, 1.125rem) 0;
    margin-block: 0;
    margin-block-end: 1rem;
  }

  li {
    line-height: 1.5;
  }

  dl {
    margin-inline: 0;
    margin-block-end: 1rem;
  }

  dt, dd {
    line-height: 1.5;
  }

  /*
   * Quotes
   * ------
   */
  blockquote {
    border-inline-start-width: var(--_quote-decoration-width, 0.25rem);
    border-inline-start-style: var(--_quote-decoration-style, solid);
    border-inline-start-color: var(--_quote-decoration-color, var(--c-grey-20, #aaa));
    padding-inline-start: var(--_quote-spacing, 0.5rem);
    display: flex;
    flex-direction: column;
    gap: var(--_quote-spacing, 1rem);
    margin: 0;
    margin-bottom: 1rem;
  }

  blockquote p {
    font-size: var(--_quote-font-size, var(--fs-big, 1.5rem));
    line-height: var(--_quote-line-height, 1.25);
    font-weight: var(--_quote-font-weight, 300);
    margin-block: 0;
  }

  blockquote cite {
    font-size: var(--_quote-cite-font-size, var(--fs-base, 1rem));
    font-style: var(--_quote-cite-font-style, normal);
    color: var(--_quote-cite-color, var(--c-grey-80, #666));
  }

  @media screen and (min-width: 1024px) {
    blockquote {
      --_quote-spacing: 2rem;
    }
  }

  /*
   * Paragraph
   * ---------
   */
  p {
    font-size: var(--_paragraph-font-size);
    line-height: var(--_paragraph-line-height, var(--lh-base, 1.5));
    max-width: var(--_paragraph-max-width, 65ch);
    margin-block: 0 1rem;
  }

  p.lead {
    font-size: var(--_paragraph-font-size, var(--fs-big, 1.5rem));
    line-height: var(--_paragraph-leading, var(--fs-leading-big, 1.25));
  }

  .columns {
    column-count: var(--_column-count, 3);
    column-fill: balance;
    column-gap: var(--_column-gap, 1rem);
  }

  @media screen and (min-width: 1024px) {
    p {
      --_paragraph-max-width: 75ch;
    }
  }

  @media screen and (min-width: 1400px) {
    p {
      --_paragraph-max-width: 85ch;
    }
  }

  /*
   * Headings
   * --------
   */
  h1 {
    display: inline-block;
    font-size: var(--_heading-size, var(--fs-large, 2.25rem));
    line-height: var(--_heading-line-height, var(--lh-large, 1.1));
    font-weight: var(--_heading-weight, 500);
    margin-block: 0 0.5rem;
  }

  h2 {
    display: inline-block;
    font-size: var(--_heading-size, var(--fs-big, 1.5rem));
    line-height: var(--_heading-line-height, var(--lh-big, 1.1));
    font-weight: var(--_heading-weight, 500);
    margin-block: 0 0.5rem;
  }

  h3 {
    display: inline-block;
    font-size: var(--_heading-size, var(--fs-base, 1rem));
    line-height: var(--_heading-line-height, var(--lh-base, 1.1));
    font-weight: var(--_heading-weight, 600);
    margin-block: 0 0.5rem;
  }

  h1 a,
  h2 a,
  h3 a {
    text-decoration: var(--_heading-decoration, none);
  }

  .heading__xl,
  .heading__large,
  .heading__big,
  .heading__base,
  .heading__small,
  .heading__tiny,
  .heading__micro {
    font-size: var(--_heading-size, var(--fs-large, 2.25rem));
    line-height: var(--_heading-line-height, var(--lh-large, 1.1));
    font-weight: var(--_heading-weight, 500);
  }

  .heading__xl {
    --_heading-size: var(--fs-xl);
  }

  .heading__large {
    --_heading-size: var(--fs-large);
  }

  .heading__big {
    --_heading-size: var(--fs-big);
  }

  .heading__base {
    --_heading-size: var(--fs-base);
    --_heading-weight: 600;
  }

  .heading__small {
    --_heading-size: var(--fs-small);
    --_heading-weight: 600;
  }

  .heading__tiny {
    --_heading-size: var(--fs-tiny);
    --_heading-weight: 600;
  }

  .heading__micro {
    --_heading-size: var(--fs-micro);
    --_heading-weight: 600;
  }
}

@layer component {
  /*
   * Image Card
   */
  .image--card {
    object-fit: cover;
    object-position: left 60%;
    aspect-ratio: 16 / 9;
    border-radius: 1rem;
    box-shadow: 0 1rem 2rem #00000066, 0 0.5rem 1rem #00000022;
  }

  /*
   * Content Card
   */
  .content-card {
    flex-grow: 1;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
  }

  .content-card__heading {
    margin-block-end: 1rem;
    font-size: var(--fs-large);
    line-height: var(--lh-large);
    letter-spacing: var(--ls-large);
  }

  .content-card__content {
    margin-block-end: 1rem;
  }

  .content-card__subheading {
    font-size: var(--fs-big);
    line-height: var(--lh-big);
    margin-bottom: 1rem;
  }

  .content-cart__list {

  }

  .content-card__list-wrapper {
    position: relative;
    padding-inline-start: 2.5rem;
    margin-bottom: 1rem;
    line-height: 1.5;
  }

  .content-card__list-title {
    display: inline;
    font-style: italic;
    font-weight: 500;
  }

  .content-card__list-title svg {
    position: absolute;
    inset-inline-start: 0;
    height: 2rem;
    width: 2rem;
  }

  .content-card__list-body {
    display: inline;
    margin-inline-start: 0;
  }

  /*
   * Page Jump
   */
  .jump-to-nav {
    position: absolute;
    width: 0;
    overflow: hidden;
    color: transparent;
  }

  .jump-to-nav:focus {
    width: auto;
    color: inherit;
  }

  .jump-to-top-link {
    position: fixed;
    bottom: 0;
    right: 0;
    opacity: 0;
    transition: opacity 0.3s;
  }

  .jump-t-top-link.visible {
    opacity: 1;
  }

  /*
   * Button
   */
  .button {
    background-color: var(--_button, #000f);
    box-shadow: var(--_button-shadows,
      0 0.1rem 0.25rem var(--_button-shadow, #0003),
      inset 0 0.1rem 0.25rem var(--_button--light, #666f),
      inset 0 -0.1rem 0.25rem var(--_button--dark, #333f)
    );
    color: var(--_color, white);
    padding: var(--_button-padding-block, 0.75rem) var(--_button-padding-inline, 1.5rem);
    border-radius: var(--_button-radius, 5rem);
    text-decoration: var(--_button-text-decoration, none);
    border: none;
    user-select: none;
    text-transform: capitalize;
    display: var(--_button-display, inline-flex);
    align-items: center;
    gap: var(--_button-icon-spacing, 0.5rem);
    font-weight: 600;
    font-size: var(--_button-font-size, var(--fs-base, 1rem));
    text-align: center;
  }

  .button svg {
    height: var(--_button-icon-size, 1rem);
    fill: var(--_button-icon-color, white);
  }

  .button:hover {
    background-color: var(--_button--light, #333f);
    text-decoration: var(--_button-text-decoration, underline);
  }

  .button:active {
    box-shadow:
      inset 0 0.25rem 0.1rem var(--_button--dark, #000f);
  }

  .button--large {
    --_button-padding-block: 0.5rem;
    --_button-padding-inline: 1.5rem;
    --_button-font-size: var(--fs-big);
  }

  .button--link {
    --_button: transparent;
    --_button--light: transparent;
    --_button--dark: transparent;
    --_button-shadows: none;
    --_color: blue;
    --_button-text-decoration: underline;
    --_border-radius: 0;
    --_button-padding-inline: 0;
  }

  .button--mini {
    --_button-padding-block: 0.175rem;
    --_button-padding-inline: 0.5rem;
    --_button-font-size: var(--fs-small);
  }

  .button--small {
    --_button-padding-block: 0.125rem;
    --_button-padding-inline: 0.5rem;
    --_button-font-size: var(--fs-tiny);
  }

  .button--block {
    width: 100%;
    --_button-display: flex;
  }
}

