---
---
@layer variables, reset, generic, element, component, page, utility
@layer variables, reset, layout, component, decorator, utility; /* todo refactor this out */

@layer variables {
  body {
    {%- for color in site.data.colors.colors %}
    {%- if color.variations %}
      {%- assign variations = color.variations %}
    {%- else %}
      {%- assign variations = null | compact %}
    {%- endif %}

    {%- assign colors = color | concat: variations  %}
    {%- for color in colors %}
    --c-{{color.name | downcase }}: {{color.value}};
    {%- endfor %}
    {%- endfor %}

    /* Scaling Perfect fifth (1.500) */
    {%- for fontsize in site.data.fonts.fonts.sizes %}
    --fs-{{ fontsize.name | downcase }}: {{ fontsize.value }};
    --lh-{{ fontsize.name | downcase }}: {{ fontsize.leading }};
    --ls-{{ fontsize.name | downcase }}: {{ fontsize.kerning }};
    {%- endfor %}
  }
}

/* todo replace with modern normalize */
@layer reset {
  /*!
  * CSS Reset by Josh Comeau
  * https://www.joshwcomeau.com/css/custom-css-reset/#introduction
  */

  /*
    Use a more-intuitive box-sizing model.
  */
  *, *::before, *::after {
    box-sizing: border-box;
  }

  /*
    Remove default margin
  */
  * {
    margin: 0;
  }

  /*
    Force scrollbars
  */
  html {
    min-height: 100dvh;
    overflow-y: scroll;
  }

  /*
    Add accessible line-height
    Improve text rendering
  */
  body {
    font-size: 1rem;
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    font-variant-ligatures: common-ligatures;
    font-family: Monserrat, Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif;
  }

  /*
    Improve media defaults
  */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }

  /*
    Remove built-in form typography styles
  */
  input, button, textarea, select {
    font: inherit;
  }

  /*
    Avoid text overflows
  */
  p, h1, h2, h3, h4, h5, h6 {
    font-weight: normal;
    overflow-wrap: break-word;
  }

  /*
    Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }
}

@layer utility {
  .sr-only {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px !important;
    padding: 0 !important;
    overflow: hidden !important;
    clip: rect(0 0 0 0) !important;
    clip-path: inset(50%) !important;
    border: 0 !important;
    white-space: nowrap !important;
  }
}

@layer layout {
  body {
    padding-block-start: var(--_body-padding-block-start, 64px);
  }

  /*
   * Container
   */
  .container--x {
    padding-block: 0;
  }

  .container--x-wrapper {
    padding-block: var(--_padding-y, 2rem);
  }

  .container--y {
    padding-inline: var(--_padding-x, 1rem);
    max-width: var(--_max-x, 80rem);
    margin: auto;
  }

  @media screen and (min-width: 768px) {
    .container--y {
      padding-inline: var(--_padding-x, 2rem);
    }
  }

  @media screen and (min-width: 1366px) {
    .container--y {
      --_padding-x: 0;
    }
  }

  /*
   * Separator
   */
  .container--x {
    position: relative; /* positioning requirement for the separators to not float */
  }

  [class*=separator] {
    /* separator background */
    color: var(--_background-color, silver);
    width: 100%;
  }

  .separator--wrapper {
    /* content container background */
    background-color: var(--_background-color, silver);
    color: unset;
  }

  .separator--block-start {
    margin-block-end: var(--_margin-block-end, -5px); /* fross hack to get rid of lines */
  }

  .separator--block-end {
    height: 0;
    margin-block-start: var(--_margin-block-start, -5px); /* gross hack to get rid of lines */
  }

  /*
   * Page Header
   */
  .header {
    padding-block: 4rem;
  }

  .header__heading {
    font-size: var(--_fs-heading, var(--fs-large));
    line-height: var(--_lh-heading, var(--lh-large));
    color: var(--_color-heading, black);
    margin-block-end: var(--_gap, 0.75rem);
  }

  .header__subheading {
    font-size: var(--_fs-subheading, var(--fs-base));
    line-height: var(--_lh-subheading, var(--lh-base));
    color: var(--_color-subheading, black);
    margin-block-end: 0;
  }

  @media screen and (min-width: 768px) {
    .header {
      padding-block: 6rem;
    }
  }

  @media screen and (min-width: 1024px) {
    .header {
      padding-block: 10rem;
    }
  }

  @media screen and (min-width: 1366px) {
    .header {
      padding-block: 8rem;
    }
  }

  /*
   * Content
   */
  .content {
    padding-block: 2rem;
  }

  @media screen and (min-width: 1024px) {
    .header {
      padding-block: 4rem;
    }
  }

  @media screen and (min-width: 1366px) {
    .header {
      padding-block: 8rem;
    }
  }

  /*
   * Masonry Stack
   */
  .masonry-stack {
    display: flex;
    flex-flow: column wrap;
    gap: 1rem;
  }

  .masonry-stack::before,
  .masonry-stack::after {
    content: "";
    flex-basis: 100%;
    width: 0;
    order: 2;
  }

  @media screen and (min-width: 668px) {
    .masonry-stack p {
      max-width: calc(100% / 2);
      margin-block-end: 1rem;
    }

    .masonry-stack img {
      max-width: calc(100% / 3);
      flex-shrink: 1;
    }
  }

  @media screen and (min-width: 1024px) {
    .masonry-stack img {
      margin-bottom: 2rem;
    }
  }

  @supports (grid-template-rows: masonry) {
    .masonry-stack {
      display: grid;
      grid-template-columns: 1fr 1fr;
      grid-template-rows: masonry;
      height: inherit;
    }

    .masonry-stack p,
    .masonry-stack img {
      width: inherit;
    }

    .masonry-stack img{
      grid-column: 2;
    }

    .masonry-stack p {
      grid-column: 1;
    }
  }
}

@layer generic {
  p:has(+ p) {
    margin-block-end: 0.75rem;
  }
}

/*
 * Forms
 * -----
 */
@layer element {
  fieldset {
    border: none;
    padding: 0;
  }

  input,
  textarea,
  select {
    -webkit-appearance: none;
    border-radius: var(--_input-border-radius, 1rem);
    border-style: var(--_input-border-style, solid);
    border-width: var(--_input-border-width, 2px);
    border-color: var(--_input-border-color, var(--c-grey-20, #bbb));
    padding: var(--_input-padding-block, 0.25rem) var(--_input-padding-inline, 0.75rem);
  }

  input:focus,
  textarea:focus,
  select:focus {
    outline: var(--_input-border-width, 2px) var(--_input-border-style, solid) var(--_input-focus-color, var(--c-accent, blue));
  }

  input[type=checkbox],
  input[type=radio] {
    padding: 0.125rem;
    width: 1rem;
    height: 1rem;
  }

  label:has(input[type=checkbox]),
  label:has(input[type=radio]){
    display: inline-flex;
    justify-content: space-between;
    align-items: center;
    gap: var(--_input-spacing, 0.25rem);
  }

  *:has(> input[type=search] + button) {
    display: inline-flex;
    gap: var(--_input-spacing, 0.25rem);
  }
}

/*
 * Typography
 * ----------
 */
@layer element {
  /*
   * Lists
   * -----
   */
  ul,
  ol {
    padding-inline-start: var(--_list-padding, 1.125rem);
  }

  dl.list--title-inline::after {
    content: "";
    visibility: hidden;
    display: block;
    height: 0;
    clear: both;
  }

  .list--title-inline dt,
  .list--title-inline dd {
    float: left;
  }
  .list--title-inline dt {
    clear: both;
    padding-right: var(--_list-inline-spacing, 0.5rem)
  }

  dl.list--inline {
    display: inline-flex;
    gap: var(--_list-inline-spacing, 1rem)
  }

  dl.list--inline dd {
    margin-inline-start: var(--_list-inline-spacing-item-adjust, -0.5rem)
  }

  /*
   * Quotes
   * ------
   */
  blockquote {
    border-inline-start-width: var(--_quote-decoration-width, 0.25rem);
    border-inline-start-style: var(--_quote-decoration-style, solid);
    border-inline-start-color: var(--_quote-decoration-color, var(--c-grey-20, #aaa));
    padding-inline-start: var(--_quote-padding, 0.5rem);
    display: flex;
    flex-direction: column;
    gap: var(--_quote-spacing, 1rem);
  }

  blockquote p {
    font-size: var(--_quote-font-size, var(--fs-big, 1.5rem));
    line-height: var(--_quote-line-height, var(--fs-leading-big, 1.25))
  }

  blockquote cite {
    font-size: var(--_quote-cite-font-size, var(--fs-base, 75rem));
    font-style: var(--_quote-cite-font-style, normal);
    color: var(--_quote-cite-color, var(--c-grey-80, #666));
  }

  /*
   * Paragraph
   * ---------
   */
  p {
    font-size: var(--_paragraph-font-size);
    max-width: var(--_paragraph-max-width, 65ch);
  }

  p + p {
    margin-bottom: 1rem;
  }

  p.lead {
    font-size: var(--_paragraph-font-size, var(--fs-big, 1.5rem));
    line-height: var(--_paragraph-leading, var(--fs-leading-big, 1.25));
  }

  .columns {
    column-count: var(--_column-count, 3);
    column-fill: balance;
    column-gap: var(--_column-gap, 1rem);
  }

  @media screen and (min-width: 1024px) {
    p {
      --_paragraph-max-width: 75ch;
    }
  }

  @media screen and (min-width: 1400px) {
    p {
      --_paragraph-max-width: 85ch;
    }
  }

  /*
   * Headings
   * --------
   */
  h1 {
    font-size: var(--_heading-size, var(--fs-large, 2.25rem));
    line-height: var(--_heading-line-height, var(--lh-large, 1.1));
    font-weight: var(--_heading-weight, 500);
  }

  h2 {
    font-size: var(--_heading-size, var(--fs-big, 1.5rem));
    line-height: var(--_heading-line-height, var(--lh-big, 1.1));
    font-weight: var(--_heading-weight, 500);
  }

  h3 {
    font-size: var(--_heading-size, var(--fs-base, 1rem));
    line-height: var(--_heading-line-height, var(--lh-base, 1.1));
    font-weight: var(--_heading-weight, 600);
  }

  h1 a,
  h2 a,
  h3 a {
    text-decoration: var(--_heading-decoration, none);
  }

  .heading__xl,
  .heading__large,
  .heading__big,
  .heading__base,
  .heading__small,
  .heading__tiny,
  .heading__micro {
    font-size: var(--_heading-size, var(--fs-large, 2.25rem));
    line-height: var(--_heading-line-height, var(--lh-large, 1.1));
    font-weight: var(--_heading-weight, 500);
  }

  .heading__xl {
    --_heading-size: var(--fs-xl);
  }

  .heading__large {
    --_heading-size: var(--fs-large);
  }

  .heading__big {
    --_heading-size: var(--fs-big);
  }

  .heading__base {
    --_heading-size: var(--fs-base);
    --_heading-weight: 600;
  }

  .heading__small {
    --_heading-size: var(--fs-small);
    --_heading-weight: 600;
  }

  .heading__tiny {
    --_heading-size: var(--fs-tiny);
    --_heading-weight: 600;
  }

  .heading__micro {
    --_heading-size: var(--fs-micro);
    --_heading-weight: 600;
  }
}

@layer component {
  /*
   * Image Card
   */
  .image--card {
    object-fit: cover;
    object-position: left 60%;
    aspect-ratio: 16 / 9;
    border-radius: 1rem;
    box-shadow: 0 1rem 2rem #00000066, 0 0.5rem 1rem #00000022;
  }

  /*
   * Content Card
   */
  .content-card {
    flex-grow: 1;
    flex-shrink: 0;
  }

  .content-card__heading {
    margin-block-end: 1rem;
    font-size: var(--fs-large);
    line-height: var(--lh-large);
    letter-spacing: var(--ls-large);
  }

  .content-card__content {
    margin-block-end: 0.75rem;
  }

  .content-card__subheading {
    font-size: var(--fs-big);
    line-height: var(--lh-big);
  }

  .content-card__list-wrapper {
    position: relative;
    padding-inline-start: 2.5rem;
    margin-bottom: 1rem;
  }

  .content-card__list-title {
    display: inline;
    font-style: italic;
  }

  .content-card__list-title svg {
    position: absolute;
    inset-inline-start: 0;
    height: 2rem;
    width: 2rem;
  }

  .content-card__list-body {
    display: inline;
  }

  /*
   * Page Jump
   */
  .jump-to-nav {
    position: absolute;
    width: 0;
    overflow: hidden;
    color: transparent;
  }

  .jump-to-nav:focus {
    width: auto;
    color: inherit;
  }

  .jump-to-top-link {
    position: fixed;
    bottom: 0;
    right: 0;
    opacity: 0;
    transition: opacity 0.3s;
  }

  .jump-t-top-link.visible {
    opacity: 1;
  }

  /*
   * Button
   */
  .button {
    background-color: var(--_button, #000f);
    box-shadow:
      0 0.1rem 0.25rem var(--_button-shadow, #0003),
      inset 0 0.1rem 0.25rem var(--_button--light, #666f),
      inset 0 -0.1rem 0.25rem var(--_button--dark, #333f);
    color: var(--_color, white);
    padding: var(--_button-padding-block, .25rem) var(--_button-padding-inline, .75rem);
    border-radius: var(--_button-radius, 5rem);
    text-decoration: var(--_button-text-decoration, none);
    border: none;
    user-select: none;
    text-transform: capitalize;
    display: var(--_button-display, inline-flex);
    align-items: center;
    gap: var(--_button-icon-spacing, 0.5rem);
    font-weight: 600;
    font-size: var(--_button-font-size, var(--fs-base, 1rem));
    text-align: center;
  }

  .button svg {
    height: var(--_button-icon-size, 1rem);
    fill: var(--_button-icon-color, white);
  }

  .button:hover {
    background-color: var(--_button--light, #333f);
    text-decoration: var(--_button-text-decoration, underline);
  }

  .button:active {
    box-shadow:
      inset 0 0.25rem 0.1rem var(--_button--dark, #000f);
  }

  .button--large {
    --_button-padding-block: 0.5rem;
    --_button-padding-inline: 1.5rem;
    --_button-font-size: var(--fs-big);
  }

  .button--mini {
    --_button-padding-block: 0.175rem;
    --_button-padding-inline: 0.5rem;
    --_button-font-size: var(--fs-small);
  }

  .button--small {
    --_button-padding-block: 0.125rem;
    --_button-padding-inline: 0.5rem;
    --_button-font-size: var(--fs-tiny);
  }

  .button--block {
    width: 100%;
    --_button-display: flex;
  }
}

